%
% AE508 Optimal Space Trajectories, Spring 2025
% Course Project
% Author: Peter Nalyvayko (petern4@illinois.edu)
%

clearvars; close all; clc;
format longg;
addpath(".");

function err = minT(lam0guess,t0,x0,xf,T,c,rho,opts_ode,m0,mu)
    tf = lam0guess(8);
    [t, X] = ode45(@eom, [t0 tf], [x0; m0; lam0guess(1:7)],opts_ode,T,c,rho,mu);
    H = hamiltonian(t,X,T,c,rho,mu);
    err = [X(end,1:3)' - xf(1:3); X(end,11:14)'; H(end) + 1];
end


% Get the initial state values
state_values = init();

% Solve the Lambert's equation analytically
[v1,v2] = lambert(state_values.r0, ...
    state_values.rf, ...
    state_values.tf, ...
    state_values.mu);

x0 = [state_values.r0;v1];
xf = [state_values.rf;state_values.vf];

rho = 1.0;
%
%
% Solve Minimum Time Optimal trajectory problem.
%
lam_guess = [1e-5*ones(7,1);state_values.tf];
[p0,~] = fsolve(@minT, ...
    lam_guess, ...
    state_values.options, ...
    state_values.t0, ...
    x0, ...
    xf, ...
    state_values.T, ...
    state_values.c, ...
    rho, ...
    state_values.opts_ode, ...
    state_values.m0, ...
    state_values.mu);
[t, X] = ode45(@eom, [state_values.t0 p0(8)], ...
    [x0; state_values.m0; p0(1:7)], ...
    state_values.opts_ode, ...
    state_values.T, ...
    state_values.c, ...
    rho, ...
    state_values.mu);

H = hamiltonian(t,X, ...
    state_values.T, ...
    state_values.c, ...
    rho, ...
    state_values.mu);
% Plot the Hamiltonian
plot(t, H,'LineWidth', 1.5);
% Plot the optimal trajectory, states, control and costates
plots(t,X, ...
    state_values.r0, ...
    state_values.v0, ...
    state_values.mu);

%
% AE508 Optimal Space Trajectories, Spring 2025
% Course Project
% 
% Team: petern4@illinois.edu, pc46@illinois.edu, davisr2@illinois.edu
%

clearvars; close all; clc;
format longg;
addpath(".");

%
opts_ode = odeset('RelTol',1e-13,'AbsTol',1e-15); % ode
options = optimoptions('fsolve','Display','iter','MaxFunEvals',1e3,...
    'MaxIter',1e3,'TolFun',1e-12,'TolX',1e-14,...
    'UseParallel',false);

state_values = initial_values();

x0 = [state_values.r0;state_values.v0];
xf = [state_values.rf;state_values.vf];
rho = 1.0;

%
% Solve Maximum momentum transfer optimal trajectory problem.
%
lam_guess = 1e-5*ones(7,1);
[p0,~,exitflag, output] = fsolve(@max_momentum,...
    lam_guess, ...
    options, ...
    state_values.t0, ...
    state_values.tf, ...
    x0, ...
    xf, ...
    state_values.T, ...
    state_values.c, ...
    rho, ...
    opts_ode, ...
    state_values.m0, ...
    state_values.m_a, ...
    state_values.mu);

[t, X] = ode45(@eom, [state_values.t0 state_values.tf], ...
    [x0; state_values.m0; p0(1:7)], ...
    opts_ode, ...
    state_values.T, ...
    state_values.c, ...
    rho, ...
    state_values.mu);

% Propagate the asteroid trajectory
opts_ode = odeset('RelTol',1e-13,'AbsTol',1e-15); % ode
[ta, Xa] = ode45(@two_body, [0 86400*1.2], ...
    [state_values.rf; state_values.vf], ...
    opts_ode, ...
    state_values.mu);
[tsp, Xsp] = ode45(@two_body, [0 86400], ...
    [state_values.r0; state_values.v_geo], ...
    opts_ode, ...
    state_values.mu);

%
% Plot the Hamiltonian
%
H = hamiltonian(t,X, ...
    state_values.T, ...
    state_values.c, ...
    rho, ...
    state_values.mu);
plot(t, H, 'LineWidth', 1.5);
%
% Plot the states, costates, control and the optimal trajectory
%
plotSet = plots();
plotSet.trajectory(t,X,state_values.r0,state_values.rf); hold on;
plot3(Xa(:,1),Xa(:,2),Xa(:,3),'LineWidth',1.5);
plot3(Xsp(:,1),Xsp(:,2),Xsp(:,3),'LineWidth',1.5); hold off;

plotSet.states(t,X);
plotSet.costates(t,X);
plotSet.control(t,X);
